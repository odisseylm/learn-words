<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mvv.personal</groupId>
  <artifactId>lean-words-dict-creator</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>lean-words JavaFX dictionary creator</name>

  <description>
      JavaFX application to create words dictionaries
      by extracting words from clipboard text.
      It has 'ignored words' list to ignore easy words.
      It automatically saves/exports words cards/translations to MemoWorld format (simple-simple CSV format with ';' separator)
  </description>

  <properties>
    <java.version>15</java.version>
    <kotlin.version>1.6.21</kotlin.version>
    <kotlin.compiler.languageVersion>1.6</kotlin.compiler.languageVersion>
    <kotlin.compiler.jvmTarget>15</kotlin.compiler.jvmTarget>
    <!-- It is experimental, It is set to 'false' to avoid warning in build log -->
    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
    <!--<kotlin.compiler.apiVersion>${kotlin.lang.min.version}</kotlin.compiler.apiVersion>-->

    <kotlin-maven-plugin.version>${kotlin.version}</kotlin-maven-plugin.version>
    <project.displayName>Dictionary GUI</project.displayName>

    <!-- General/language properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- java minimal version should be <= 12 (code for maven plugins should use java <= 12) -->
    <!--<java.min.version>12</java.min.version>-->
    <!--<java.max.version>17</java.max.version>-->

    <java.version>${java.version}</java.version>
    <java.release>${java.version}</java.release>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- It is also designed for reusing in gradle.
         Gradle uses its own a bit old version of kotlin :-(
      -->
    <!--<kotlin.build.version>1.5.0</kotlin.build.version>-->
    <!--<kotlin.build.lang.version>1.5</kotlin.build.lang.version>-->

    <!--<kotlin.min.version>1.6.0</kotlin.min.version>-->
    <!--<kotlin.lang.min.version>1.6</kotlin.lang.min.version>-->

    <!--<kotlin.max.version>1.6.21</kotlin.max.version>-->
    <!--<kotlin.lang.max.version>1.6</kotlin.lang.max.version>-->

    <lombok.version>1.18.22</lombok.version>
    <findbugs.jsr305.version>3.0.2</findbugs.jsr305.version>

    <apache-httpcomponents-httpclient.version>4.5.13</apache-httpcomponents-httpclient.version>
    <apache-commons-lang3.version>3.12.0</apache-commons-lang3.version>
    <apache-commons-collections4.version>4.4</apache-commons-collections4.version>
    <apache-commons-io.version>2.11.0</apache-commons-io.version>
    <apache-commons-cli.version>1.5.0</apache-commons-cli.version>
    <apache-commons-text.version>1.9</apache-commons-text.version>
    <apache-commons-exec.version>1.3</apache-commons-exec.version>
    <commons-beanutils.version>1.9.4</commons-beanutils.version>

    <guava.version>31.1-jre</guava.version>

    <log4j2.version>2.17.2</log4j2.version>
    <slf4j.version>1.7.36</slf4j.version>
    <kotlin-logging-jvm.version>2.1.23</kotlin-logging-jvm.version>

    <!-- Actually only this version is available in maven repository. 7.X is not available -->
    <gradle.version>6.1.1</gradle.version>
    <maven-custom-plugin.version>3.6.0</maven-custom-plugin.version>

    <jackson.version>2.15.2</jackson.version>
    <gson.version>2.9.0</gson.version>

    <!-- Tests -->
    <jupiter.version>5.8.2</jupiter.version>
    <assertj.version>3.22.0</assertj.version>
    <jsonassert.version>1.5.1</jsonassert.version>
    <mockito-kotlin.version>5.0.0</mockito-kotlin.version>
    <mockito.version>4.6.1</mockito.version>
    <net-byte-buddy.version>1.12.10</net-byte-buddy.version>

    <!-- To shut up Idea. -->
    <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.0.0-M7</maven-failsafe-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-dependency-plugin.version>3.2.0</maven-dependency-plugin.version>
    <build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>
    <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
    <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
    <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
    <maven-site-plugin.version>3.8.2</maven-site-plugin.version>
    <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
    <templating-maven-plugin.version>1.0.0</templating-maven-plugin.version>
    <git-commit-id-maven-plugin.version>5.0.0</git-commit-id-maven-plugin.version>
    <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>
    <spotify.dockerfile-maven-plugin.version>1.4.13</spotify.dockerfile-maven-plugin.version>
    <groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
      <javafx.version>20.0.2</javafx.version>
  </properties>


  <dependencies>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
      <!--suppress MavenPackageUpdate -->
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
      <!--suppress MavenPackageUpdate -->
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
      <!--<version>${jackson.version}</version>-->
      <version>2.15.2</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>2.15.2</version>
    </dependency>
    <!-- As alternative to jackson -->
    <!--
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    -->

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <!--suppress MavenPackageUpdate -->
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--<dependency>-->
    <!--  <groupId>org.openjfx</groupId>-->
    <!--  <artifactId>javafx</artifactId>-->
    <!--  <version>20</version>-->
    <!--  <type>pom</type>-->
    <!--</dependency>-->

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <!-- Deprecated :-( -->
    <!--<dependency>-->
    <!--  <groupId>de.codecentric.centerdevice</groupId>-->
    <!--  <artifactId>javafxsvg</artifactId>-->
    <!--  <version>1.3.0</version>-->
    <!--</dependency>-->

    <!--
    <dependency>
      <groupId>cn.stylefeng.roses</groupId>
      <artifactId>dict-api</artifactId>
      <version>7.3.4</version>
    </dependency>

    <dependency>
      <groupId>org.tinygroup</groupId>
      <artifactId>dict</artifactId>
      <version>0.0.12</version>
    </dependency>
    -->
    <!--<dependency>-->
    <!--  <groupId>com.github.xslczx</groupId>-->
    <!--  <artifactId>dict</artifactId>-->
    <!--  <version>1.0.4</version>-->
    <!--</dependency>-->
    <dependency>
      <groupId>sourceforge.net</groupId>
      <artifactId>jdictd</artifactId>
      <version>1.2</version>
      <scope>system</scope>
      <systemPath>${basedir}/lib/jdictd-1.2.jar</systemPath>
    </dependency>
    <!--<dependency>-->
    <!--  <groupId>mid.apps</groupId>-->
    <!--  <artifactId>DictionaryForMIDs_EngRus_Mueller</artifactId>-->
    <!--  <version>1.2</version>-->
    <!--  <scope>system</scope>-->
    <!--  <systemPath>${basedir}/lib/DictionaryForMIDs_EngRus_Mueller-without-dictionaries.jar</systemPath>-->
    <!--</dependency>-->

    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.7.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${apache-commons-io.version}</version>
    </dependency>



      <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.10.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito.kotlin</groupId>
      <artifactId>mockito-kotlin</artifactId>
      <version>${mockito-kotlin.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>3.2.2</version>
      </dependency>

      <!-- To fix vulnerable dependency. -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.4.5</version>
      </dependency>
      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>5.8.21</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-autoconfigure</artifactId>
        <version>2.7.14</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>5.3.29</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>5.3.29</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>5.3.29</version>
      </dependency>

      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <!--<version>1.33</version>-->
        <!-- May be incompatible -->
        <version>2.0</version>
      </dependency>

      <!--
       maven:org.springframework.boot:spring-boot-autoconfigure:2.4.2
       CVE-2023-20883 7.5 Uncontrolled Resource Consumption vulnerability pending CVSS allocation
      -->

      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-bridge</artifactId>
        <version>1.16</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-dom</artifactId>
        <version>1.16</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>xmlgraphics-commons</artifactId>
        <version>2.8</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.artifactId}</finalName>

    <pluginManagement>
      <plugins>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/integration/java</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/integration/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-temp-directories</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>bsh-property</goal>
            </goals>
            <configuration>
              <source><![CDATA[
              // TODO: fix k8s volume to avoid using host directory
              // temporary solution to avoid later creating this dir by root/docker user
              for (int i=0; i<10; i++) {
                new File(project.getBasedir(), "target/k8s/data/postgres-data-volume-" + i + "/").mkdirs();
              }
              ]]></source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <parameters>true</parameters>
          <annotationProcessorPaths>
            <!--<path>-->
            <!--  <groupId>org.mapstruct</groupId>-->
            <!--  <artifactId>mapstruct-processor</artifactId>-->
            <!--  <version>${mapstruct.version}</version>-->
            <!--</path>-->
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin-maven-plugin.version}</version>

        <configuration>
          <compilerPlugins>
            <!--<plugin>jpa</plugin>-->
            <!--<plugin>all-open</plugin>-->
            <!--<plugin>spring</plugin>-->
            <!--<plugin>lombok</plugin>-->
            <!--<plugin>kapt</plugin>-->
          </compilerPlugins>

          <nowarn>false</nowarn>  <!-- Disable/enable warnings -->
          <args>
            <arg>-java-parameters</arg>
            <arg>-Xjsr305=strict</arg> <!-- Enable strict mode for JSR-305 annotations -->
            <arg>-Xemit-jvm-type-annotations</arg>
            <arg>-Xjvm-default=all</arg>
            <!--<arg>-Xnullability-annotations=@<package-name>:<report-level></arg>-->
            <!--<arg>-Xnullability-annotations=strict</arg>-->
          </args>
          <jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>
          <!--<jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>-->
          <!--<myIncremental>${kotlin.compiler.incremental}</myIncremental>-->
          <pluginOptions>
            <!--
            <option>all-open:annotation=javax.persistence.Entity</option>
            <option>all-open:annotation=javax.persistence.MappedSuperclass</option>
            <option>all-open:annotation=javax.persistence.Embeddable</option>
            -->
          </pluginOptions>
        </configuration>

        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-noarg</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <!--<dependency>-->
          <!--  <groupId>org.mapstruct</groupId>-->
          <!--  <artifactId>mapstruct-processor</artifactId>-->
          <!--  <version>${mapstruct.version}</version>-->
          <!--</dependency>-->
          <!--<dependency>-->
          <!--  <groupId>org.jetbrains.kotlin</groupId>-->
          <!--  <artifactId>kotlin-maven-lombok</artifactId>-->
          <!--  <version>${kotlin.version}</version>-->
          <!--</dependency>-->
          <!--<dependency>-->
          <!--  <groupId>org.projectlombok</groupId>-->
          <!--  <artifactId>lombok</artifactId>-->
          <!--  <version>${lombok.version}</version>-->
          <!--</dependency>-->
        </dependencies>

        <executions>
          <!--<execution>-->
          <!--  <id>kapt</id>-->
          <!--  <goals>-->
          <!--    <goal>kapt</goal>-->
          <!--  </goals>-->
          <!--  <configuration>-->
          <!--    &lt;!&ndash;<args>  - -illegal-access=permit</args>&ndash;&gt;-->
          <!--    <sourceDirs>-->
          <!--      <sourceDir>src/main/kotlin</sourceDir>-->
          <!--      <sourceDir>src/main/java</sourceDir>-->
          <!--    </sourceDirs>-->
          <!--    <annotationProcessorPaths>-->
          <!--      &lt;!&ndash; Specify your annotation processors here. &ndash;&gt;-->
          <!--      <annotationProcessorPath>-->
          <!--        <groupId>com.google.dagger</groupId>-->
          <!--        <artifactId>dagger-compiler</artifactId>-->
          <!--        <version>2.40.1</version>-->
          <!--      </annotationProcessorPath>-->
          <!--    </annotationProcessorPaths>-->
          <!--  </configuration>-->
          <!--</execution>-->
          <execution>
            <id>compile</id>
            <phase>process-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>

          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--<plugin>-->
      <!--  <groupId>org.openjfx</groupId>-->
      <!--  <artifactId>javafx-maven-plugin</artifactId>-->
      <!--  <artifactId>javafx-plugin</artifactId>-->
      <!--  <version>0.0.13</version>-->
      <!--  <configuration>-->
      <!--    &lt;!&ndash;<mainClass>com.example.App</mainClass>&ndash;&gt;-->
      <!--  </configuration>-->
      <!--</plugin>-->

      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <version>${groovy-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                log.info('Test message: {}', 'Hello, World!')
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*ITTest*</exclude>
            <exclude>**/*ITest*</exclude>
            <exclude>**/*Integration*</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>**/*ITTest*</include>
            <include>**/*ITest*</include>
            <include>**/*Integration*</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
