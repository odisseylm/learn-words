<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mvv.personal</groupId>
  <artifactId>lean-words-dict-creator</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>lean-words JavaFX dictionary creator</name>

  <description>
      JavaFX application to create words dictionaries
      by extracting words from clipboard text.
      It has 'ignored words' list to ignore easy words.
      It automatically saves/exports words cards/translations to MemoWorld format (simple-simple CSV format with ';' separator)
  </description>

  <properties>
    <toolchain.jdk.version>[22,)</toolchain.jdk.version>

    <!--<java.version>22</java.version>-->
    <java.version>16</java.version>
    <java.release>${java.version}</java.release>
    <!--<kotlin.version>1.6.21</kotlin.version>-->
    <!--<kotlin.compiler.languageVersion>1.6</kotlin.compiler.languageVersion>-->
    <kotlin.version>1.7.0</kotlin.version>
    <kotlin.compiler.languageVersion>1.7</kotlin.compiler.languageVersion>

    <kotlin.compiler.jvmTarget>15</kotlin.compiler.jvmTarget>
    <!-- It is experimental, It is set to 'false' to avoid warning in build log -->
    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
    <!--<kotlin.compiler.apiVersion>${kotlin.lang.min.version}</kotlin.compiler.apiVersion>-->

    <kotlin-maven-plugin.version>${kotlin.version}</kotlin-maven-plugin.version>
    <project.displayName>Dictionary GUI</project.displayName>

    <!-- General/language properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- It is also designed for reusing in gradle.
         Gradle uses its own a bit old version of kotlin :-(
      -->
    <!--<kotlin.build.version>1.5.0</kotlin.build.version>-->
    <!--<kotlin.build.lang.version>1.5</kotlin.build.lang.version>-->

    <!--<kotlin.min.version>1.6.0</kotlin.min.version>-->
    <!--<kotlin.lang.min.version>1.6</kotlin.lang.min.version>-->

    <!--<kotlin.max.version>1.6.21</kotlin.max.version>-->
    <!--<kotlin.lang.max.version>1.6</kotlin.lang.max.version>-->

    <lombok.version>1.18.32</lombok.version>
    <findbugs.jsr305.version>3.0.2</findbugs.jsr305.version>

    <apache-httpcomponents-httpclient.version>4.5.13</apache-httpcomponents-httpclient.version>
    <apache-commons-lang3.version>3.12.0</apache-commons-lang3.version>
    <apache-commons-collections4.version>4.4</apache-commons-collections4.version>
    <apache-commons-io.version>2.16.1</apache-commons-io.version>
    <apache-commons-cli.version>1.5.0</apache-commons-cli.version>
    <apache-commons-text.version>1.9</apache-commons-text.version>
    <apache-commons-exec.version>1.3</apache-commons-exec.version>
    <commons-beanutils.version>1.9.4</commons-beanutils.version>

    <guava.version>31.1-jre</guava.version>

    <log4j2.version>2.17.2</log4j2.version>
    <slf4j.version>1.7.36</slf4j.version>
    <kotlin-logging-jvm.version>2.1.23</kotlin-logging-jvm.version>

    <jackson.version>2.17.0</jackson.version>
    <gson.version>2.9.0</gson.version>

    <!-- Tests -->
    <jupiter.version>5.10.2</jupiter.version>
    <assertj.version>3.25.3</assertj.version>
    <jsonassert.version>1.5.1</jsonassert.version>
    <!-- For 1.9.0 -->
    <!-- <mockito-kotlin.version>5.3.1</mockito-kotlin.version> -->
    <!-- For 1.7.0 -->
    <mockito-kotlin.version>5.1.0</mockito-kotlin.version>
    <mockito.version>5.11.0</mockito.version>
    <net-byte-buddy.version>1.12.10</net-byte-buddy.version>

    <!-- To shut up Idea. -->
    <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.0.0-M7</maven-failsafe-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-dependency-plugin.version>3.2.0</maven-dependency-plugin.version>
    <build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>
    <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
    <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
    <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
    <maven-site-plugin.version>3.8.2</maven-site-plugin.version>
    <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
    <templating-maven-plugin.version>1.0.0</templating-maven-plugin.version>
    <git-commit-id-maven-plugin.version>5.0.0</git-commit-id-maven-plugin.version>
    <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>
    <spotify.dockerfile-maven-plugin.version>1.4.13</spotify.dockerfile-maven-plugin.version>
    <groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
    <javafx.version>23-ea+3</javafx.version>
  </properties>


  <dependencies>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
      <!--suppress MavenPackageUpdate -->
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
      <!--suppress MavenPackageUpdate -->
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <!-- As alternative to jackson -->
    <!--
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    -->

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <!--suppress MavenPackageUpdate -->
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!--<dependency>-->
    <!--  <groupId>org.openjfx</groupId>-->
    <!--  <artifactId>javafx</artifactId>-->
    <!--  <version>20</version>-->
    <!--  <type>pom</type>-->
    <!--</dependency>-->

    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-media</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>${javafx.version}</version>
    </dependency>

    <dependency>
      <groupId>com.mpatric</groupId>
      <artifactId>mp3agic</artifactId>
      <version>0.9.1</version>
    </dependency>


    <!-- Deprecated :-( -->
    <!--<dependency>-->
    <!--  <groupId>de.codecentric.centerdevice</groupId>-->
    <!--  <artifactId>javafxsvg</artifactId>-->
    <!--  <version>1.3.0</version>-->
    <!--</dependency>-->

    <!--
    <dependency>
      <groupId>cn.stylefeng.roses</groupId>
      <artifactId>dict-api</artifactId>
      <version>7.3.4</version>
    </dependency>

    <dependency>
      <groupId>org.tinygroup</groupId>
      <artifactId>dict</artifactId>
      <version>0.0.12</version>
    </dependency>
    -->
    <!--<dependency>-->
    <!--  <groupId>com.github.xslczx</groupId>-->
    <!--  <artifactId>dict</artifactId>-->
    <!--  <version>1.0.4</version>-->
    <!--</dependency>-->
    <dependency>
      <groupId>sourceforge.net</groupId>
      <artifactId>jdictd</artifactId>
      <version>1.2</version>
      <scope>system</scope>
      <systemPath>${basedir}/lib/jdictd-1.2.jar</systemPath>
    </dependency>
    <!--<dependency>-->
    <!--  <groupId>mid.apps</groupId>-->
    <!--  <artifactId>DictionaryForMIDs_EngRus_Mueller</artifactId>-->
    <!--  <version>1.2</version>-->
    <!--  <scope>system</scope>-->
    <!--  <systemPath>${basedir}/lib/DictionaryForMIDs_EngRus_Mueller-without-dictionaries.jar</systemPath>-->
    <!--</dependency>-->

    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.9</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.10.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>5.2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>5.2.5</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.5.0-M1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.14.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.11.0</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${apache-commons-io.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>1.3</version>
    </dependency>

    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>3.45.3.0</version>
    </dependency>
    <dependency>
      <groupId>us.codecraft</groupId>
      <artifactId>xsoup</artifactId>
      <version>0.3.7</version>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.17.2</version>
    </dependency>
    <dependency>
      <groupId>com.github.mizosoft.methanol</groupId>
      <artifactId>methanol</artifactId>
      <version>1.7.0</version>
    </dependency>

    <!-- This artifact includes ALL sub-packages/sub-jars                                -->
    <!--   This artifact contains also packages for using freeTts by java-speech API     -->
    <!--     freetts-jsapi10.jar                                                         -->
    <!--     packages: com.sun.speech.engine.synthesis.text                              -->
    <!--               com.sun.speech.freetts.jsapi                                      -->
    <!--                                                                                 -->
    <!--   However it does not contain jsapi-base-1.0.jar classes for speech recognition -->
    <!--     package com.sun.speech.engine.recognition (SphinxEngineCentral, etc)        -->

    <dependency>
      <groupId>net.sf.sociaal</groupId>
      <artifactId>freetts</artifactId>
      <version>1.2.2</version>
    </dependency>


    <!-- Alternative jars, BUT there is no desired (but not mandatory) freetts-jsapi10.jar at org.mobicents.external.freetts -->
    <!-- https://repo.denkbares.com/repo-des/ -->
    <!--
    <dependency>
      <groupId>java-speech</groupId>
      <artifactId>jsapi</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>java-speech</groupId>
      <artifactId>jsapi-base</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>java-speech</groupId>
      <artifactId>tags</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>java-speech</groupId>
      <artifactId>js</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>freetts</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>freetts-jsapi10</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>cmu_us_kal</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>cmulex</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>en_us</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>cmu_time_awb</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>cmutimelex</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>cmudict04</artifactId>
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.freetts</groupId>
      <artifactId>mbrola</artifactId>
      <version>1.2.2</version>
    </dependency>
    -->

    <!--
    <dependency>
      <groupId>com.ibm.watson</groupId>
      <artifactId>speech-to-text</artifactId>
      <version>11.0.1</version>
    </dependency>

    <dependency>
      <groupId>fr.vsct.tock</groupId>
      <artifactId>tock-stt-google-speech</artifactId>
      <version>19.3.3</version>
    </dependency>

    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-texttospeech</artifactId>
      <version>2.25.0</version>
    </dependency>

    <dependency>
      <groupId>com.oracle.oci.sdk</groupId>
      <artifactId>oci-java-sdk-aispeech</artifactId>
      <version>3.25.1</version>
    </dependency>

    <dependency>
      <groupId>ua.net.nlp</groupId>
      <artifactId>morfologik-ukrainian-search</artifactId>
      <version>4.9.1</version>
    </dependency>
    <dependency>
      <groupId>ua.net.nlp</groupId>
      <artifactId>morfologik-ukrainian-lt</artifactId>
      <version>6.1.5</version>
    </dependency>
    -->

    <!--&lt;!&ndash; Speech recognition library &ndash;&gt;-->
    <!--<dependency>-->
    <!--  <groupId>com.alphacephei</groupId>-->
    <!--  <artifactId>vosk</artifactId>-->
    <!--  <version>0.3.45</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--  <groupId>com.alphacephei</groupId>-->
    <!--  <artifactId>vosk-model-en</artifactId>-->
    <!--  <version>0.3.47</version>-->
    <!--</dependency>-->

    <!-- in https://nexus.velocitypowered.com/repository/maven-public/ -->
    <!--<dependency>-->
    <!--  <groupId>com.mojang</groupId>-->
    <!--  <artifactId>text2speech</artifactId>-->
    <!--  <version>1.13.9</version>-->
    <!--</dependency>-->

    <!-- Java SDK for Picovoice's Rhino Speech-to-Intent engine -->
    <!-- https://picovoice.ai/docs/rhino/ -->
    <!-- https://medium.com/@alirezakenarsarianhari/picovoices-speech-to-intent-engine-a731775994c5 -->
    <!--<dependency>-->
    <!--  <groupId>ai.picovoice</groupId>-->
    <!--  <artifactId>rhino-java</artifactId>-->
    <!--  <version>2.2.1</version>-->
    <!--  <scope>runtime</scope>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--  <groupId>org.mobicents.external.jspeex</groupId>-->
    <!--  <artifactId>jspeex</artifactId>-->
    <!--  <version>0.9.7</version>-->
    <!--</dependency>-->

    <!--
    <dependency>
      <groupId>edu.cmu.sphinx</groupId>
      <artifactId>sphinx4</artifactId>
      <version>1.0-beta6</version>
    </dependency>
    <dependency>
      <groupId>edu.cmu.sphinx.models</groupId>
      <artifactId>sphinx4-wsj</artifactId>
      <version>1.0.0-beta6</version>
    </dependency>
    <dependency>
      <groupId>edu.cmu.sphinx.models</groupId>
      <artifactId>zipcity</artifactId>
      <version>1.0-beta6</version>
    </dependency>
    <dependency>
      <groupId>edu.cmu.sphinx.models</groupId>
      <artifactId>sphinx4-hub4</artifactId>
      <version>1.0.0-beta6</version>
    </dependency>
    <dependency>
      <groupId>edu.cmu.sphinx.models</groupId>
      <artifactId>TIDIGITS_8gau_13dCep_16k_40mel_130Hz_6800Hz</artifactId>
      <version>1.0</version>
    </dependency>
    -->


    <!-- This SDK allows you to use the Microsoft Cognitive Speech Service. See https://aka.ms/csspeech for more information. -->
    <!--<dependency>-->
    <!--  <groupId>com.microsoft.cognitiveservices.speech</groupId>-->
    <!--  <artifactId>client-sdk</artifactId>-->
    <!--  <version>1.32.1</version>-->
    <!--</dependency>-->


    <!--<dependency>-->
    <!--  <groupId>ai.tock</groupId>-->
    <!--  <artifactId>tock-stt-google-speech</artifactId>-->
    <!--  <version>23.3.4</version>-->
    <!--  <scope>test</scope>-->
    <!--</dependency>-->


    <!--<dependency>-->
    <!--  <groupId>io.github.akang943578</groupId>-->
    <!--  <artifactId>java-google-speech</artifactId>-->
    <!--  <version>1.0.3</version>-->
    <!--</dependency>-->


    <!--<dependency>-->
    <!--  <groupId>org.mobicents.external.jspeex</groupId>-->
    <!--  <artifactId>jspeex</artifactId>-->
    <!--  <version>0.9.7</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--  <groupId>org.mobicents.external.jspeex</groupId>-->
    <!--  <artifactId>jspeex</artifactId>-->
    <!--  <version>0.9.7</version>-->
    <!--</dependency>-->

    <!-- From http://nexus.emergya.es/nexus/content/repositories/public/ -->
    <!--<dependency>-->
    <!--  <groupId>com.sun.speech.freetts</groupId>-->
    <!--  <artifactId>freetts</artifactId>-->
    <!--  <version>1.2.2</version>-->
    <!--</dependency>-->

    <!-- OpenHAB Multimedia FreeTTS -->
    <!--<dependency>-->
    <!--  <groupId>org.openhab.io</groupId>-->
    <!--  <artifactId>org.openhab.io.multimedia.tts.freetts</artifactId>-->
    <!--  <version>1.14.0</version>-->
    <!--</dependency>-->
    <!--<dependency>-->
    <!--  <groupId>org.openhab.io</groupId>-->
    <!--  <artifactId>org.openhab.io.multimedia.tts.marytts</artifactId>-->
    <!--  <version>1.14.0</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--  <groupId>org.openhab.io</groupId>-->
    <!--  <artifactId>org.openhab.io.multimedia.tts.speechdispatcher</artifactId>-->
    <!--  <version>1.14.0</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--  <groupId>org.openhab.io</groupId>-->
    <!--  <artifactId>org.openhab.io.multimedia</artifactId>-->
    <!--  <version>1.8.3</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--  <groupId>com.sun.mail</groupId>-->
    <!--  <artifactId>dsn</artifactId>-->
    <!--  <version>2.0.1</version>-->
    <!--</dependency>-->


    <!-- Last Release on Sep 16, 2022 -->
    <!--<dependency>-->
    <!--  <groupId>freetts</groupId>-->
    <!--  <artifactId>jsapi</artifactId>-->
    <!--  <version>1.2.1</version>-->
    <!--</dependency>-->
    <!--<dependency>-->
    <!--  <groupId>freetts</groupId>-->
    <!--  <artifactId>cmulex</artifactId>-->
    <!--  <version>1.2.1</version>-->
    <!--</dependency>-->

    <!-- From http://maven.icm.edu.pl/artifactory/repo/ -->
    <!--<dependency>-->
    <!--  <groupId>cmulex</groupId>-->
    <!--  <artifactId>cmulex</artifactId>-->
    <!--  <version>1.0</version>-->
    <!--</dependency>-->

    <!--
    <dependency>
      <groupId>org.mobicents.external.jsr309</groupId>
      <artifactId>jsr309</artifactId>
      <version>0.1</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.jsr309</groupId>
      <artifactId>mscontrol</artifactId>
      <version>1.0</version>
    </dependency>

    <dependency>
      <groupId>org.mobicents.external.tritonus</groupId>
      <artifactId>tritonus_gsm</artifactId>
      <version>0.3.6</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.tritonus</groupId>
      <artifactId>tritonus_share</artifactId>
      <version>0.3.6</version>
    </dependency>

    <dependency>
      <groupId>org.mobicents.external.appframework</groupId>
      <artifactId>swing-layout</artifactId>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.external.appframework</groupId>
      <artifactId>appframework</artifactId>
      <version>1.0.3</version>
    </dependency>
    -->


    <!-- https://opencast.org/ -->
    <!--<dependency>-->
    <!--  <groupId>org.opencastproject</groupId>-->
    <!--  <artifactId>opencast-speech-to-text-api</artifactId>-->
    <!--  <version>14.3</version>-->
    <!--  <scope>provided</scope>-->
    <!--</dependency>-->

    <!-- Tock Google Speech STT -->
    <!--<dependency>-->
    <!--  <groupId>fr.vsct.tock</groupId>-->
    <!--  <artifactId>tock-stt-google-speech</artifactId>-->
    <!--  <version>19.3.3</version>-->
    <!--</dependency>-->

    <!-- Tock Google Speech STT -->
    <!--<dependency>-->
    <!--  <groupId>ai.tock</groupId>-->
    <!--  <artifactId>tock-stt-google-speech</artifactId>-->
    <!--  <version>23.3.4</version>-->
    <!--  <scope>test</scope>-->
    <!--</dependency>-->

    <!-- ??? Vosk -->
    <!--<dependency>-->
    <!--  <groupId>com.alphacephei</groupId>-->
    <!--  <artifactId>vosk</artifactId>-->
    <!--  <version>0.3.45</version>-->
    <!--</dependency>-->

    <!--<dependency>-->
    <!--  <groupId>com.mojang</groupId>-->
    <!--  <artifactId>text2speech</artifactId>-->
    <!--  <version>1.13.9</version>-->
    <!--</dependency>-->

    <!-- Not free -->
    <!-- https://picovoice.ai -->
    <!-- https://picovoice.ai/docs/quick-start/rhino-java/ -->
    <!--<dependency>-->
    <!--  <groupId>ai.picovoice</groupId>-->
    <!--  <artifactId>rhino-java</artifactId>-->
    <!--  <version>2.2.1</version>-->
    <!--  <scope>runtime</scope>-->
    <!--</dependency>-->

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.microutils</groupId>
      <artifactId>kotlin-logging-jvm</artifactId>
      <version>2.1.23</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j2.version}</version>
    </dependency>



    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>1.10.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito.kotlin</groupId>
      <artifactId>mockito-kotlin</artifactId>
      <version>${mockito-kotlin.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- T O D O: For debugging. -->
    <!--
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-toolchains-plugin</artifactId>
      <version>3.2.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>build-helper-maven-plugin</artifactId>
      <version>3.4.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>3.8.3</version>
      <scope>provided</scope>
    </dependency>
    -->

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>3.2.2</version>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <!--<dependency>-->
      <!--  <groupId>net.bytebuddy</groupId>-->
      <!--  <artifactId>byte-buddy</artifactId>-->
      <!--  <version>1.14.14</version>-->
      <!--</dependency>-->
      <!--<dependency>-->
      <!--  <groupId>net.bytebuddy</groupId>-->
      <!--  <artifactId>byte-buddy-agent</artifactId>-->
      <!--  <version>1.14.14</version>-->
      <!--</dependency>-->
      <!--<dependency>-->
      <!--  <groupId>org.objenesis</groupId>-->
      <!--  <artifactId>objenesis</artifactId>-->
      <!--  <version>3.3</version>-->
      <!--</dependency>-->
      <!--<dependency>-->
      <!--  <groupId>org.objenesis</groupId>-->
      <!--  <artifactId>objenesis-test</artifactId>-->
      <!--  <version>3.3</version>-->
      <!--</dependency>-->

      <!-- To fix vulnerable dependency. -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.4.14</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.4.14</version>
      </dependency>
      <!--<dependency>-->
      <!--  <groupId>commons-beanutils</groupId>-->
      <!--  <artifactId>commons-beanutils</artifactId>-->
      <!--  <version>1.9.4</version>-->
      <!--</dependency>-->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>1.26.1</version> <!-- > 1.25 -->
      </dependency>


      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>5.8.21</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-autoconfigure</artifactId>
        <version>2.7.14</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>5.3.29</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>5.3.29</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>5.3.29</version>
      </dependency>

      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <!--<version>1.33</version>-->
        <!-- May be incompatible -->
        <version>2.0</version>
      </dependency>

      <!--
       maven:org.springframework.boot:spring-boot-autoconfigure:2.4.2
       CVE-2023-20883 7.5 Uncontrolled Resource Consumption vulnerability pending CVSS allocation
      -->

      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-bridge</artifactId>
        <version>1.16</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-dom</artifactId>
        <version>1.16</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>xmlgraphics-commons</artifactId>
        <version>2.8</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.artifactId}</finalName>

    <pluginManagement>
      <plugins>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <parameters>true</parameters>
          <compilerArgs>
            <arg>--add-modules</arg>
            <arg>jdk.incubator.foreign</arg>
          </compilerArgs>
          <compilerArguments>
          </compilerArguments>
          <annotationProcessorPaths>
            <!--<path>-->
            <!--  <groupId>org.mapstruct</groupId>-->
            <!--  <artifactId>mapstruct-processor</artifactId>-->
            <!--  <version>${mapstruct.version}</version>-->
            <!--</path>-->
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin-maven-plugin.version}</version>

        <configuration>
          <compilerPlugins>
            <!--<plugin>jpa</plugin>-->
            <!--<plugin>all-open</plugin>-->
            <!--<plugin>spring</plugin>-->
            <!--<plugin>lombok</plugin>-->
            <!--<plugin>kapt</plugin>-->
          </compilerPlugins>

          <nowarn>false</nowarn>  <!-- Disable/enable warnings -->
          <args>
            <arg>-java-parameters</arg>
            <arg>-Xjsr305=strict</arg> <!-- Enable strict mode for JSR-305 annotations -->
            <arg>-Xemit-jvm-type-annotations</arg>
            <arg>-Xjvm-default=all</arg>
            <!--<arg>-Xnullability-annotations=@<package-name>:<report-level></arg>-->
            <!--<arg>-Xnullability-annotations=strict</arg>-->
          </args>
          <jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>
          <!--<jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>-->
          <!--<myIncremental>${kotlin.compiler.incremental}</myIncremental>-->
          <pluginOptions>
            <!--
            <option>all-open:annotation=javax.persistence.Entity</option>
            <option>all-open:annotation=javax.persistence.MappedSuperclass</option>
            <option>all-open:annotation=javax.persistence.Embeddable</option>
            -->
          </pluginOptions>
        </configuration>

        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-noarg</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <!--<dependency>-->
          <!--  <groupId>org.mapstruct</groupId>-->
          <!--  <artifactId>mapstruct-processor</artifactId>-->
          <!--  <version>${mapstruct.version}</version>-->
          <!--</dependency>-->
          <!--<dependency>-->
          <!--  <groupId>org.jetbrains.kotlin</groupId>-->
          <!--  <artifactId>kotlin-maven-lombok</artifactId>-->
          <!--  <version>${kotlin.version}</version>-->
          <!--</dependency>-->
          <!--<dependency>-->
          <!--  <groupId>org.projectlombok</groupId>-->
          <!--  <artifactId>lombok</artifactId>-->
          <!--  <version>${lombok.version}</version>-->
          <!--</dependency>-->
        </dependencies>

        <executions>
          <!--<execution>-->
          <!--  <id>kapt</id>-->
          <!--  <goals>-->
          <!--    <goal>kapt</goal>-->
          <!--  </goals>-->
          <!--  <configuration>-->
          <!--    &lt;!&ndash;<args>  - -illegal-access=permit</args>&ndash;&gt;-->
          <!--    <sourceDirs>-->
          <!--      <sourceDir>src/main/kotlin</sourceDir>-->
          <!--      <sourceDir>src/main/java</sourceDir>-->
          <!--    </sourceDirs>-->
          <!--    <annotationProcessorPaths>-->
          <!--      &lt;!&ndash; Specify your annotation processors here. &ndash;&gt;-->
          <!--      <annotationProcessorPath>-->
          <!--        <groupId>com.google.dagger</groupId>-->
          <!--        <artifactId>dagger-compiler</artifactId>-->
          <!--        <version>2.40.1</version>-->
          <!--      </annotationProcessorPath>-->
          <!--    </annotationProcessorPaths>-->
          <!--  </configuration>-->
          <!--</execution>-->
          <execution>
            <id>compile</id>
            <phase>process-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>

          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <argLine>
            -Dforeign.restricted=permit
            --add-modules jdk.incubator.foreign
            --add-opens java.desktop/java.awt=ALL-UNNAMED
            --add-opens java.desktop/sun.awt.windows=ALL-UNNAMED
          </argLine>
          <!--<argLine__16>-->
          <!--  -Dforeign.restricted=permit-->
          <!--  &#45;&#45;add-modules jdk.incubator.foreign-->
          <!--  &#45;&#45;add-opens java.desktop/java.awt=ALL-UNNAMED-->
          <!--  &#45;&#45;add-opens java.desktop/sun.awt.windows=ALL-UNNAMED-->
          <!--</argLine__16>-->
          <!--<argLine__17_18>-->
          <!--  &#45;&#45;add-modules jdk.incubator.foreign-->
          <!--  &#45;&#45;enable-native-access=ALL-UNNAMED-->
          <!--  &#45;&#45;add-opens java.desktop/java.awt=ALL-UNNAMED-->
          <!--  &#45;&#45;add-opens java.desktop/sun.awt.windows=ALL-UNNAMED-->
          <!--</argLine__17_18>-->
          <!--<argLine__19>-->
          <!--  &#45;&#45;enable-native-access=ALL-UNNAMED-->
          <!--  &#45;&#45;add-opens java.desktop/java.awt=ALL-UNNAMED-->
          <!--  &#45;&#45;add-opens java.desktop/sun.awt.windows=ALL-UNNAMED-->
          <!--</argLine__19>-->
          <excludes>
            <exclude>**/*ITTest*</exclude>
            <exclude>**/*ITest*</exclude>
            <exclude>**/*Integration*</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>**/*ITTest*</include>
            <include>**/*ITest*</include>
            <include>**/*Integration*</include>
          </includes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <mainClass>com.mvv.gui.cardeditor.LearnWordsEditorApp</mainClass>
          <additionalClasspathElements>
            <additionalClasspathElement>${basedir}/lib/jdictd-1.2.jar</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-toolchains-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <goals>
              <!-- Old goal 'toolchain' supports only $home/.m2/toolchains.xml file. -->
              <!-- <goal>toolchain</goal> -->

              <!-- Extended goal which supports
                    * toolchains from $home/.m2/toolchains.xml file
                    * current JDK (current $JAVA_HOME)
                    * standard locations (for example in C:/Program Files/...)
                    * JDKs from env variables in format like JAVA11_HOME, JAVA22_HOME (pattern is configurable)
                -->
              <goal>select-jdk-toolchain</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- The version constraint for the JDK toolchain to select.

               See https://docs.oracle.com/middleware/1212/core/MAVEN/maven_version.htm
                   '7.3 Version Range References' about version restrictions/format.
            -->
          <version>${toolchain.jdk.version}</version>

          <!-- The runtime version constraint for the JDK toolchain to select. -->
          <!--<runtimeVersion></runtimeVersion>-->

          <!-- The vendor constraint for the JDK toolchain to select. -->
          <!--<vendor></vendor>-->

          <!-- True by default. -->
          <!-- <discoverToolchains>true</discoverToolchains> -->

          <!-- Possible values of enum JdkMode:
                 Never   - always ignore the current JDK
                 IfSame  - to not use a toolchain if the toolchains that would be selected is the current JDK
                 IfMatch - favor the current JDK if it matches the requirements

                 IfMatch is default value.
            -->
          <!--<useJdk>IfMatch</useJdk>-->

          <!-- The runtime name constraint for the JDK toolchain to select. -->
          <!--<runtimeName></runtimeName>-->

          <!-- Configuration for toolchain goal.
               Actually if we use select-jdk-toolchain goal it is not used but to avoid IDEA warning let keep it.
            -->
          <toolchains>
            <jdk>
              <version>${toolchain.jdk.version}</version>
            </jdk>
          </toolchains>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.4.0</version>
        <executions>
          <execution>
            <id>use-maven-toolchain-jdk-for-kotlin</id>
            <!-- Binds to the "validate" phase by default. -->
            <goals>
              <goal>bsh-property</goal>
            </goals>
            <!-- Uncomment this for skipping plugin. -->
            <!-- <phase/> -->
            <configuration>
              <source><![CDATA[
                import org.apache.maven.plugin.descriptor.PluginDescriptor;

                String toolChainJdk = null;

                try {
                  PluginDescriptor pd = new PluginDescriptor();
                  pd.setGroupId("org.apache.maven.plugins");
                  pd.setArtifactId("maven-toolchains-plugin");

                  Map pluginContext = session.getPluginContext(pd, project);
                  if (pluginContext == null)
                    throw new IllegalStateException("maven-toolchains-plugin plugin context is not found. Probably it is not set up.");

                  // A bit risky part of code: I'm not 100% sure that this class will be used in the future.
                  // It is not specified in the org.apache.maven.model.ConfigurationContainer
                  // (there is just java.lang.Object, but it must be some DOM)

                  Object toolchainPluginContext = pluginContext.get("toolchain-jdk");
                  if (toolchainPluginContext != null) {
                    // We can use type Object in bean-shell script instead of Xpp3Dom.
                    // Real type is XML DOM object (currently type is org.codehaus.plexus.util.xml.Xpp3Dom class)

                    Object config = toolchainPluginContext.getConfiguration();
                    if (config != null && config.getChildCount() > 0)
                      toolChainJdk = config.getChild(0).getValue().trim();
                  }
                } catch (Exception ex) {
                  log.error("toolchain-jdk is not found. " + ex.getMessage(), ex);

                  // Or we can rethrow error just there.
                  // throw new IllegalStateException("toolchain-jdk is not found.", ex);
                }

                if (toolChainJdk != null && !toolChainJdk.isEmpty()) {
                  project.getProperties().setProperty("kotlin.compiler.jdkHome", toolChainJdk);
                }
                else {
                  String requiredJdkVersion = project.getProperties().getProperty("toolchain.jdk.version");
                  String currentJavaHome = System.getProperty("java.home");

                  log.info("toolchain-jdk for version '" + requiredJdkVersion + "' is not found.");
                  log.info("  Possible reasons");
                  log.info("    * default java_home matches required java version ");
                  log.info("    * maven-toolchains-plugin is not configured properly");
                  log.info("  ");
                  log.info("Default " + currentJavaHome + " will be used.");
                }

                ]]>
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <repositories>
      <!--<repository>-->
      <!--    <id>nexus.velocitypowered.com</id>-->
      <!--    <url>https://nexus.velocitypowered.com/repository/maven-public/</url>-->
      <!--</repository>-->
      <repository>
          <id>jboss</id>
          <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
      </repository>
      <!-- For com.sun.speech.freetts » freetts » 1.2.2 -->
      <!--<repository>-->
      <!--    <id>emergya.es</id>-->
      <!--    <url>http://nexus.emergya.es/nexus/content/repositories/public/</url>-->
      <!--</repository>-->
      <repository>
          <id>dl.bintray.com</id>
          <url>https://dl.bintray.com/openhab/mvn/</url>
      </repository>
      <repository>
          <id>repo.spring.io</id>
          <url>https://repo.spring.io/plugins-release/</url>
      </repository>
      <repository>
          <id>repo.denkbares.com</id>
          <url>https://repo.denkbares.com/repo-des/</url>
      </repository>
      <repository>
          <id>software.rescarta.org</id>
          <url>https://software.rescarta.org/nexus/content/repositories/thirdparty/</url>
      </repository>
      <repository>
        <id>maven_central</id>
        <name>Maven Central</name>
        <url>https://repo.maven.apache.org/maven2/</url>
      </repository>
  </repositories>
</project>
